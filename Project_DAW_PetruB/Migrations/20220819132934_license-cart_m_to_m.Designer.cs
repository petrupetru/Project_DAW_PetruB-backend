// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_DAW_PetruB.Entities;

namespace Project_DAW_PetruB.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220819132934_license-cart_m_to_m")]
    partial class licensecart_m_to_m
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project_DAW_PetruB.Entities.Cart", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Project_DAW_PetruB.Entities.License", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProducerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("Project_DAW_PetruB.Entities.LicenseCart", b =>
                {
                    b.Property<string>("LicenseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CartId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LicenseId", "CartId");

                    b.HasIndex("CartId");

                    b.ToTable("LicenseCarts");
                });

            modelBuilder.Entity("Project_DAW_PetruB.Entities.Producer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("Project_DAW_PetruB.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project_DAW_PetruB.Entities.Cart", b =>
                {
                    b.HasOne("Project_DAW_PetruB.Entities.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("Project_DAW_PetruB.Entities.Cart", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project_DAW_PetruB.Entities.License", b =>
                {
                    b.HasOne("Project_DAW_PetruB.Entities.Producer", "Producer")
                        .WithMany("Licenses")
                        .HasForeignKey("ProducerId");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("Project_DAW_PetruB.Entities.LicenseCart", b =>
                {
                    b.HasOne("Project_DAW_PetruB.Entities.Cart", "Cart")
                        .WithMany("LicenseCarts")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_DAW_PetruB.Entities.License", "License")
                        .WithMany("LicenseCarts")
                        .HasForeignKey("LicenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("License");
                });

            modelBuilder.Entity("Project_DAW_PetruB.Entities.Cart", b =>
                {
                    b.Navigation("LicenseCarts");
                });

            modelBuilder.Entity("Project_DAW_PetruB.Entities.License", b =>
                {
                    b.Navigation("LicenseCarts");
                });

            modelBuilder.Entity("Project_DAW_PetruB.Entities.Producer", b =>
                {
                    b.Navigation("Licenses");
                });

            modelBuilder.Entity("Project_DAW_PetruB.Entities.User", b =>
                {
                    b.Navigation("Cart");
                });
#pragma warning restore 612, 618
        }
    }
}
